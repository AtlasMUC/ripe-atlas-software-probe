#!/bin/sh /etc/rc.common
START=60
STOP=01
USE_PROCD=1
MAINU=ripe-atlas
MEASU=ripe-atlas-measurement
GROUP=ripe-atlas

validate_config()
{
	uci_validate_section 'ripe-atlas' 'ripe-atlas' "${1}" \
		'enabled:uinteger:1' \
		'use_screen:uinteger:0' \
		'mode:string:prod' \
		'rxtx_report:uinteger:0'

	return ${?}
}

start_service()
{
	local cfg=/etc/ripe-atlas/config.txt
	local mod=/etc/ripe-atlas/mode

	validate_ripe_atlas 'config'
	if [ ${?} -ne 0 ]; then
		echo 'validation failed'
		return 1
	fi

	if [ ${enabled} -eq 0 ]; then
		return 1
	fi

	case "${mode}" in
		test|dev|prod)
			;;
		*)
			return 1
			;;
	esac

	echo 'Starting RIPE Atlas'
	mkdir -p /var/run/ripe-atlas/pids
	mkdir -p /var/run/ripe-atlas/status
	for dir in main 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20; do
		mkdir -p /var/spool/ripe-atlas/crons/${dir}
	done
	for dir in new oneoff out/ooq out/ooq10; do
		mkdir -p /var/spool/ripe-atlas/data/${dir}
	done

	chown -R ${MEASU}:${GROUP} /var/run/ripe-atlas/*
	chown -R ${MEASU}:${GROUP} /var/spool/ripe-atlas/*

	echo 1>/dev/null 2> "${cfg}"
	if [ ${rxtx_report} -ne 0 ]; then
		echo 'RXTXRPT=yes' >> "${cfg}"
	fi
	echo "${mode}" > "${mod}"

	procd_open_instance
	if [ "${use_screen}" -ne 0 ]; then
		proc_set_param command /usr/bin/screen
		procd_append_param command '-Admt'
		procd_append_param command 'atlas'
		procd_append_param command /usr/sbin/ripe-atlas
	else
		procd_set_param command /usr/sbin/ripe-atlas
	fi
	procd_set_param user ${MAINU}
	procd_set_param group ${GROUP}
	procd_set_param respawn
	procd_close_instance
}

stop_service()
{
	killall ripe-atlas telnetd perd eperd eooqd rptra6 1>/dev/null 2>&1
}

service_triggers()
{
	procd_add_validation validate_config
}
