stages:
  - docker_image
  - build
  - lint
  - prepare
  - test

variables:
  DOCKER_IMAGE_DEBIAN11: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/debian11:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_DEBIAN12: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/debian12:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_OL8: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ol8:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_OL9: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ol9:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_PREP: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/prep:${CI_COMMIT_REF_SLUG}
  GIT_SUBMODULE_STRATEGY: recursive
  RPMS_DIR: rpmbuild/RPMS

.build_image:
  stage: docker_image
  only:
    refs:
      - /^devel.*/
      - tags
    changes:
      - ${DOCKER_DIR}/Dockerfile
  image: docker:latest
  script:
    - docker build -t ${DOCKER_IMAGE} ${DOCKER_DIR}
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker push ${DOCKER_IMAGE}

build_image_debian11:
  variables:
    DOCKER_DIR: .gitlab-docker/debian11
    DOCKER_IMAGE: ${DOCKER_IMAGE_DEBIAN11}
  extends: .build_image

build_image_debian12:
  variables:
    DOCKER_DIR: .gitlab-docker/debian12
    DOCKER_IMAGE: ${DOCKER_IMAGE_DEBIAN12}
  extends: .build_image

build_image_ol8:
  variables:
    DOCKER_DIR: .gitlab-docker/ol8
    DOCKER_IMAGE: ${DOCKER_IMAGE_OL8}
  extends: .build_image

build_image_ol9:
  variables:
    DOCKER_DIR: .gitlab-docker/ol9
    DOCKER_IMAGE: ${DOCKER_IMAGE_OL9}
  extends: .build_image

build_image_prep:
  variables:
    DOCKER_DIR: .gitlab-docker/prep
    DOCKER_IMAGE: ${DOCKER_IMAGE_PREP}
  extends: .build_image

.build-ci-debian:
  stage: build
  only:
    - /^devel.*/
    - tags
  script:
    - cd ripe-atlas-software-probe
    - dpkg-buildpackage -b -us -uc
    - cp ../ripe-atlas-*.deb .
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME}"
    paths:
      - ripe-atlas-*.deb
    expire_in: never

build-ci-debian11:
  extends: .build-ci-debian
  image: ${DOCKER_IMAGE_DEBIAN11}

build-ci-debian12:
  extends: .build-ci-debian
  image: ${DOCKER_IMAGE_DEBIAN12}

.build-ci-rhel:
  stage: build
  only:
    - /^devel.*/
    - tags
  variables:
    REPO_RPM_PATH: ${RPMS_DIR}/noarch/*.rpm
    X86_RPM_PATH: ${RPMS_DIR}/x86_64/*.rpm
    REPO_GIT_SOURCE: https://${PROBE_SUBGROUP_USER}:${PROBE_SUBGROUP_TOKEN}@${SUBGROUP_URL}
  script:
    - cd ..
    - mkdir -p ${OS_VERSION}/{noarch,x86_64}   # create a repo with same structure as prod

    # build define list
    - REPO_GIT_TAG=""
    - export REPO_GIT_TAG="${CI_COMMIT_TAG:-${CI_COMMIT_BRANCH}}"

    # build repo rpm
    - HOME=${PWD} rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" ripe-atlas-software-probe/rhel/ripe-atlas-repo.spec
    - cp -a ${REPO_RPM_PATH} ${OS_VERSION}/noarch

    # build x86 rpm
    - HOME=${PWD} rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" ripe-atlas-software-probe/rhel/ripe-atlas-probe.spec
    - cp -a ${REPO_RPM_PATH} ${OS_VERSION}/noarch
    - cp -a ${X86_RPM_PATH} ${OS_VERSION}/x86_64

    # build anchor rpm
    - HOME=${PWD} rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" ripe-atlas-software-probe/rhel/ripe-atlas-anchor.spec
    - cp -a ${REPO_RPM_PATH} ${OS_VERSION}/noarch

    # move artifact to right place
    - cd ripe-atlas-software-probe && mv ../${OS_VERSION} .

  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME}"
    paths:
      - ./${OS_VERSION}
    expire_in: never


build-ci-el8:
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_OL8}
  extends: .build-ci-rhel

build-ci-el9:
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_OL9}
  extends: .build-ci-rhel

.lint-ci-rhel:
  stage: lint
  only:
    - /^devel.*/
    - tags
  script:
    - mkdir lint_report
    - for RPM in $(find ${OS_VERSION} -type f); do rpmlint $RPM > lint_report/$(echo $RPM | sed -n "s/^.*\/\s*\(\S*\)-.*$/\1.log/p") ; done || true
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME}-lint-report"
    paths:
      - ./lint_report
    expire_in: never  


lint-ci-el8:
  needs:                                                                                                                                                          
    - job: build-ci-el8                                                                                                                                           
      artifacts: true 
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_OL8}
  extends: .lint-ci-rhel

lint-ci-el9:
  needs:                                                                                                                                                          
    - job: build-ci-el9                                                                                                                                           
      artifacts: true 
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_OL9}
  extends: .lint-ci-rhel

.prepare-ci-rhel:
  stage: prepare
  only:
    - /^devel.*/
    - tags
  script:
    - 'eval ${PREPARE}'
    - 'eval ${FINALIZE}'
    - 'eval ${CLEANUP}'

    - cp -a ${OS_VERSION} ${OS_VERSION}-deployable

  artifacts:
    name: "${OS_VERSION}-deployable"
    paths:
      - ./${OS_VERSION}-deployable
    expire_in: never

deployable-el8:
  needs:
    - job: build-ci-el8
      artifacts: true
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_PREP}
  extends: .prepare-ci-rhel

deployable-el9:
  needs:
    - job: build-ci-el9
      artifacts: true
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_PREP}
  extends: .prepare-ci-rhel

.add-to-test:
  stage: test
  only:
    - /^devel.*/
    - tags
  script:
    - 'eval ${PREPARE}'
    - 'eval ${DEPLOY_AT}'
    - 'eval ${CLEANUP}'
  when: manual

add-el8-to-test:
  needs:
    - job: deployable-el8
      artifacts: true
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_PREP}
  extends: .add-to-test

add-el9-to-test:
  needs:
    - job: deployable-el9
      artifacts: true
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_PREP}
  extends: .add-to-test
