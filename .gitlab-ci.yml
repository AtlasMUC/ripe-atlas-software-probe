stages:
  - docker_image
  - build
  - lint
  - prepare
  - deploy
  - deploy:el8
  - deploy:el9

variables:
  # DOCKER_IMAGE_DEBIAN11: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/debian11:${CI_COMMIT_REF_SLUG}
  # DOCKER_IMAGE_DEBIAN12: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/debian12:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_OL8: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ol8:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_OL9: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ol9:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_PREP: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/prep:${CI_COMMIT_REF_SLUG}
  GIT_SUBMODULE_STRATEGY: recursive
  RPMS_DIR: rpmbuild/RPMS

.build_image:
  stage: docker_image
  only:
    refs:
      - /^devel.*/
      - /^testing$/
      - /^master$/
      - tags
    changes:
      - ${DOCKER_DIR}/Dockerfile
  image: docker:latest
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t ${DOCKER_IMAGE} ${DOCKER_DIR}
    - docker push ${DOCKER_IMAGE}

# build_image_debian11:
#   variables:
#     DOCKER_DIR: .gitlab-docker/debian11
#     DOCKER_IMAGE: ${DOCKER_IMAGE_DEBIAN11}
#   extends: .build_image

# build_image_debian12:
#   variables:
#     DOCKER_DIR: .gitlab-docker/debian12
#     DOCKER_IMAGE: ${DOCKER_IMAGE_DEBIAN12}
#   extends: .build_image

build_image_ol8:
  variables:
    DOCKER_DIR: .gitlab-docker/ol8
    DOCKER_IMAGE: ${DOCKER_IMAGE_OL8}
  extends: .build_image

build_image_ol9:
  variables:
    DOCKER_DIR: .gitlab-docker/ol9
    DOCKER_IMAGE: ${DOCKER_IMAGE_OL9}
  extends: .build_image

build_image_prep:
  variables:
    DOCKER_DIR: .gitlab-docker/prep
    DOCKER_IMAGE: ${DOCKER_IMAGE_PREP}
  extends: .build_image

# .build-ci-debian:
#   stage: build
#   only:
#     - /^devel.*/
#     - tags
#   script:
#     - cd ripe-atlas-software-probe
#     - dpkg-buildpackage -b -us -uc
#     - cp ../ripe-atlas-*.deb .
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME}"
#     paths:
#       - ripe-atlas-*.deb
#     expire_in: never

# build-ci-debian11:
#   extends: .build-ci-debian
#   image: ${DOCKER_IMAGE_DEBIAN11}

# build-ci-debian12:
#   extends: .build-ci-debian
#   image: ${DOCKER_IMAGE_DEBIAN12}

.build-ci-rhel:
  stage: build
  only:
    - /^devel.*/
    - /^testing$/
    - /^master$/
    - tags
  variables:
    REPO_RPM_PATH: ${RPMS_DIR}/noarch/*.rpm
    X86_RPM_PATH: ${RPMS_DIR}/x86_64/*.rpm
    REPO_GIT_SOURCE: https://${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}@${URL}
  script:
    # build define list
    - REPO_GIT_TAG=""
    - export REPO_GIT_TAG="${CI_COMMIT_TAG:-${CI_COMMIT_BRANCH}}"
    - export HOME="${PWD}"
    - mkdir -p ${HOME}/${OS_VERSION}/{noarch,x86_64}   # create a repo with same structure as prod

    # build repo rpm
    - rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" rhel/ripe-atlas-repo.spec
    - cp -a ${HOME}/${REPO_RPM_PATH} ${HOME}/${OS_VERSION}/noarch

    # build x86_64 rpm
    - rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" rhel/ripe-atlas-probe.spec
    - cp -a ${HOME}/${REPO_RPM_PATH} ${HOME}/${OS_VERSION}/noarch
    - cp -a ${HOME}/${X86_RPM_PATH} ${HOME}/${OS_VERSION}/x86_64
    - cp ${HOME}/rpmbuild/BUILD/ripe-atlas-software-probe/VERSION ${HOME}/${OS_VERSION}

    # build anchor rpm
    - rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" rhel/ripe-atlas-anchor.spec
    - cp -a ${HOME}/${REPO_RPM_PATH} ${HOME}/${OS_VERSION}/noarch

  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
      - ./${OS_VERSION}
    expire_in: never

build-ci-el8:
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_OL8}
  extends: .build-ci-rhel

build-ci-el9:
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_OL9}
  extends: .build-ci-rhel

.lint-ci-rhel:
  stage: lint
  only:
    - /^devel.*/
    - /^testing$/
    - /^master$/
    - tags
  script:
    - mkdir lint_report
    - for RPM in $(find ${OS_VERSION} -type f); do rpmlint $RPM > lint_report/$(echo $RPM | sed -n "s/^.*\/\s*\(\S*\)-.*$/\1.log/p") ; done || true
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-lint-report"
    paths:
      - ./lint_report
    expire_in: never  

lint-ci-el8:
  needs:
    - job: build-ci-el8
      artifacts: true 
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_OL8}
  extends: .lint-ci-rhel

lint-ci-el9:
  needs:
    - job: build-ci-el9
      artifacts: true 
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_OL9}
  extends: .lint-ci-rhel

.prepare-ci-rhel:
  stage: prepare
  script:
    - 'eval ${PREPARE}'
    - cp -a ${OS_VERSION} ${OS_VERSION}-deployable
  image: ${DOCKER_IMAGE_PREP}
  artifacts:
    name: "${OS_VERSION}-deployable"
    paths:
      - ./${OS_VERSION}-deployable
    expire_in: never

.prepare-ci-el8:
  stage: prepare
  needs:
    - job: build-ci-el8
      artifacts: true
  variables:
    OS_VERSION: el8
  extends: .prepare-ci-rhel

.prepare-ci-el9:
  stage: prepare
  needs:
    - job: build-ci-el9
      artifacts: true
  variables:
    OS_VERSION: el9
  extends: .prepare-ci-rhel

prepare-ci-el8-devel:
    stage: prepare
    only:
      - /^devel.*/
    extends: .prepare-ci-el8
    environment:
      name: devel

prepare-ci-el9-devel:
    stage: prepare
    only:
      - /^devel.*/
    extends: .prepare-ci-el9
    environment:
      name: devel

prepare-ci-el8-testing:
    stage: prepare
    only:
      - /^testing$/
    extends: .prepare-ci-el8
    environment:
      name: testing

prepare-ci-el9-testing:
    stage: prepare
    only:
      - /^testing$/
    extends: .prepare-ci-el9
    environment:
      name: testing

prepare-ci-el8-master:
    stage: prepare
    only:
      - /^master$/
      - tags
    extends: .prepare-ci-el8
    environment:
      name: master

prepare-ci-el9-master:
    stage: prepare
    only:
      - /^master$/
      - tags
    extends: .prepare-ci-el9
    environment:
      name: master

.approve-ci:
  stage: deploy
  allow_failure: false
  script: ':'
  when: manual

.approve-ci-rhel:
  stage: deploy
  extends: .approve-ci

approve-ci-rhel-devel:
  only:
    - /^devel.*/
  extends: .approve-ci-rhel
  environment:
    name: devel

approve-ci-rhel-testing:
  only:
    - /^testing$/
  extends: .approve-ci-rhel
  environment:
    name: testing

approve-ci-rhel-master:
  only:
    - /^master$/
    - tags
  extends: .approve-ci-rhel
  environment:
    name: master

.deploy-ci:
  variables:
    REPO_GIT_SOURCE: https://${DEPLOY_USER}:${DEPLOY_TOKEN}@${URL}
  script:
    - 'eval ${DEPLOY}'

.deploy-ci-el8:
  stage: deploy:el8
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_PREP}
  extends: .deploy-ci
  dependencies:
    - .prepare-ci-el8

.deploy-ci-el9:
  stage: deploy:el9
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_PREP}
  extends: .deploy-ci
  dependencies:
    - .prepare-ci-el9

deploy-ci-el8-devel:
    only:
      - /^devel.*/
    extends: .deploy-ci-el8
    environment:
      name: devel
    dependencies:
      - prepare-ci-el8-devel

deploy-ci-el9-devel:
    only:
      - /^devel.*/
    extends: .deploy-ci-el9
    environment:
      name: devel
    dependencies:
      - prepare-ci-el9-devel

deploy-ci-el8-testing:
    only:
      - /^testing$/
    extends: .deploy-ci-el8
    environment:
      name: testing
    dependencies:
      - prepare-ci-el8-testing

deploy-ci-el9-testing:
    only:
      - /^testing$/
    extends: .deploy-ci-el9
    environment:
      name: testing
    dependencies:
      - prepare-ci-el9-testing

deploy-ci-el8-master:
    only:
      - /^master$/
      - tags
    extends: .deploy-ci-el8
    environment:
      name: master
    dependencies:
      - prepare-ci-el8-master

deploy-ci-el9-master:
    only:
      - /^master$/
      - tags
    extends: .deploy-ci-el9
    environment:
      name: master
    dependencies:
      - prepare-ci-el9-master
